# CONFIG [optional] Host name at which the Strapi server should be running
# Defaults to 0.0.0.0
#HOST="0.0.0.0"

# CONFIG [optional] Port on which the Strapi server should be running
# Defaults to 1337
#PORT="1337"

# CONFIG [production-only] Absolute URL where the Strapi server will be served
# With scheme, host, port and path but without trailing slash
# On production, ensure it uses the HTTPS protocol
#PUBLIC_URL="https://api.easyfest.site"

# CONFIG [optional] Database client to be used by Strapi
# Check other required variables at ./config/database.js
# Accepted values: mysql, mysql2, postgres, sqlite. Defaults to sqlite.
#DATABASE_CLIENT="sqlite"

# CONFIG [with DATABASE_CLIENT="sqlite"] Relative path to the SQLite database file
# Should be ignored by version control (git)
# Defaults to ".tmp/data.db"
#DATABASE_FILENAME=".tmp/data.db"

# SECRET [with DATABASE_CLIENT="postgres" or "mysql"] Database connection string
#DATABASE_URL="<fill me>"

# SECRET Strapi's session middleware keys (based on koa-session)
# Four random base 64 secrets, separated by commas (i.e. "randomB64key==,anotherB64key==")
# Generate four random base 64 ones in a terminal with `$ openssl rand -base64 32`
APP_KEYS="<fill me>,<fill me>"

# SECRET (Strapi)
# Generate new ones in a terminal with `$ openssl rand -base64 32`
API_TOKEN_SALT="<fill me>"

# SECRET (Strapi)
# Generate new ones in a terminal with `$ openssl rand -base64 32`
ADMIN_JWT_SECRET="<fill me>"

# SECRET (Strapi)
# Generate new ones in a terminal with `$ openssl rand -base64 32`
JWT_SECRET="<fill me>"
