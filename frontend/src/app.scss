@use 'sass:map';
@use 'design-system/colors.scss';
@use 'design-system/typographies.scss';

// Theme configuration is done by giving value to Bulma variables
// https://bulma.io/documentation/customize/variables

// -- Initial variables (with a literal value)

$text: colors.$Dark;
$family-sans-serif: map.get(typographies.$Body_Large, "font-family"), sans-serif;

$size-1: map.get(typographies.$ðŸ–¥_Title_Large , "font-size");
$size-2: map.get(typographies.$ðŸ–¥_Title_Medium, "font-size");
$size-3: map.get(typographies.$ðŸ–¥_Title_Small , "font-size");
$size-4: map.get(typographies.$Body_Large , "font-size");
$size-5: map.get(typographies.$Body_Medium, "font-size");
$size-6: map.get(typographies.$Body_Small , "font-size");
$size-7: map.get(typographies.$Body_Small_Uppercase, "font-size");

// -- Derived variables (that take value from other variables)

$primary: colors.$Primary;
$primary-light: colors.$Primary_Light;
$secondary /* custom */: colors.$Secondary;
$secondary-light /* custom */: colors.$Secondary_Light;
$secondary-lighter /* custom */: colors.$Secondary_Lighter;
$dark: colors.$Dark;
$text-light: $text;
$text-strong: $text;
$white: colors.$White;
$white-bis: colors.$White_Bis;
$white-ter: colors.$White_Ter;

$custom-colors: (
    "secondary": ($secondary, findColorInvert($secondary), $secondary-light),
    "secondary-lighter": ($secondary-lighter, findColorInvert($secondary-lighter)),
);

// -- Import all bulma styles

@import "bulma/bulma.sass";
@import "bulma-list/sass/bulma-list.sass";

// -- Bulma style overrides

.title {
    font-size: $size-1;
}

.content h3 {
    color: $secondary;

    &:not(:first-child) {
        margin-top: 0;
    }
}

// -- Custom helpers

@mixin tablet() {
    @media (min-width: $tablet) {
        @content;
    }
}
@mixin mixTypographyClass($typographyMap) {
    @each $prop, $value in $typographyMap {
        #{$prop}: $value;
    }
}

.header--large {
    @include mixTypographyClass(typographies.$ðŸ“±_Title_Large);
    @include tablet() {
        @include mixTypographyClass(typographies.$ðŸ–¥_Title_Large);
    };
}
.header--medium {
    @include mixTypographyClass(typographies.$ðŸ“±_Title_Medium);
    @include tablet() {
        @include mixTypographyClass(typographies.$ðŸ–¥_Title_Medium);
    };
}
.header--small {
    @include mixTypographyClass(typographies.$ðŸ“±_Title_Small);
    @include tablet() {
        @include mixTypographyClass(typographies.$ðŸ–¥_Title_Small);
    };
}

.text--large {
    @include mixTypographyClass(typographies.$Body_Large);
}
.text--medium {
    @include mixTypographyClass(typographies.$Body_Medium);
}
.text--small {
    @include mixTypographyClass(typographies.$Body_Small);
}
.text--small--uppercase {
    @include mixTypographyClass(typographies.$Body_Small_Uppercase);
}
